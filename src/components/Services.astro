---
const services = [
  {
    id: 'trainer',
    title: 'Personal Training',
    description: 'Book professional personal trainers for customized fitness programs tailored to your goals and lifestyle.',
    icon: 'trainer',
    color: 'blue',
    features: ['Custom Programs', 'Certified Trainers', 'Progress Tracking'],
    popular: false
  },
  {
    id: 'retail',
    title: 'Retail Services',
    description: 'Schedule shopping appointments and retail consultations with dedicated personal service representatives.',
    icon: 'retail',
    color: 'green',
    features: ['Personal Shopping', 'Skip the Queue', '24/7 Consultation']
  },
  {
    id: 'ticket',
    title: 'Event Tickets',
    description: 'Book tickets for events, concerts, and activities with instant confirmation and digital delivery.',
    icon: 'ticket',
    color: 'yellow',
    features: ['Digital Tickets', 'Free Cancellation', 'Best Prices']
  },
  {
    id: 'other',
    title: 'Professional Services',
    description: 'Book various professional services including meeting rooms, classes, spa treatments, and consultations.',
    icon: 'other',
    color: 'purple',
    features: ['Wide Selection', 'Easy Booking', 'Flexible Scheduling']
  }
];

const getIcon = (type: string) => {
  switch (type) {
    case 'trainer':
      return `<svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm8 7h-2v7c0 1.1-.9 2-2 2h-1v-6c0-1.66-1.34-3-3-3s-3 1.34-3 3v6H8c-1.1 0-2-.9-2-2V9H4c-.55 0-1-.45-1-1s.45-1 1-1h16c.55 0 1 .45 1 1s-.45 1-1 1z"/>
        <circle cx="7" cy="12" r="1"/>
        <circle cx="17" cy="12" r="1"/>
        <path d="M12 13.5c-.83 0-1.5.67-1.5 1.5v6h3v-6c0-.83-.67-1.5-1.5-1.5z"/>
      </svg>`;
    case 'retail':
      return `<svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        <path d="M7 18c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
        <path d="M5 5h2v2H5V5zm3 0h8l-1 7H9L8 5z"/>
      </svg>`;
    case 'ticket':
      return `<svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M22 10v8c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2v-8c.83 0 1.5-.67 1.5-1.5S2.83 7 2 7V6c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2v1c-.83 0-1.5.67-1.5 1.5S21.17 10 22 10z"/>
        <path d="M12 8l2.5 4.5L12 16l-2.5-3.5L12 8z"/>
        <circle cx="9" cy="10" r="1"/>
        <circle cx="15" cy="10" r="1"/>
        <circle cx="9" cy="14" r="1"/>
        <circle cx="15" cy="14" r="1"/>
      </svg>`;
    case 'other':
      return `<svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
        <path d="M12 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-3 9c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3-3-1.34-3-3z"/>
        <path d="M12 11l3 3-3 3-3-3 3-3z"/>
      </svg>`;
    default:
      return '';
  }
};

const getColorClasses = (color: string) => {
  switch (color) {
    case 'blue':
      return {
        icon: 'text-blue-600 bg-blue-100',
        badge: 'bg-blue-600 text-white',
        button: 'text-blue-600 hover:text-blue-700',
        border: 'hover:border-blue-200 hover:shadow-blue-100/50',
        gradient: 'from-blue-500 to-blue-600'
      };
    case 'green':
      return {
        icon: 'text-green-600 bg-green-100',
        badge: 'bg-green-600 text-white',
        button: 'text-green-600 hover:text-green-700',
        border: 'hover:border-green-200 hover:shadow-green-100/50',
        gradient: 'from-green-500 to-green-600'
      };
    case 'yellow':
      return {
        icon: 'text-yellow-600 bg-yellow-100',
        badge: 'bg-yellow-600 text-white',
        button: 'text-yellow-600 hover:text-yellow-700',
        border: 'hover:border-yellow-200 hover:shadow-yellow-100/50',
        gradient: 'from-yellow-500 to-yellow-600'
      };
    case 'purple':
      return {
        icon: 'text-purple-600 bg-purple-100',
        badge: 'bg-purple-600 text-white',
        button: 'text-purple-600 hover:text-purple-700',
        border: 'hover:border-purple-200 hover:shadow-purple-100/50',
        gradient: 'from-purple-500 to-purple-600'
      };
    default:
      return {
        icon: 'text-gray-600 bg-gray-100',
        badge: 'bg-gray-600 text-white',
        button: 'text-gray-600 hover:text-gray-700',
        border: 'hover:border-gray-200 hover:shadow-gray-100/50',
        gradient: 'from-gray-500 to-gray-600'
      };
  }
};
---

<section id="services" class="py-24 bg-white relative overflow-hidden">
  <!-- Background Pattern -->
  <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,rgba(59,130,246,0.03)_0%,transparent_50%)] pointer-events-none"></div>
  <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='rgb(15 23 42 / 0.04)'%3e%3cpath d='m0 .5h32m-32 32v-32'/%3e%3c/svg%3e')] [mask-image:radial-gradient(ellipse_at_center,black_50%,transparent_90%)] pointer-events-none"></div>
  
  <div class="container mx-auto px-4 relative">
    <div class="text-center mb-20">
      <div class="inline-flex items-center space-x-2 bg-blue-50 border border-blue-100 px-6 py-3 rounded-full mb-8 shadow-sm">
        <div class="w-3 h-3 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-pulse"></div>
        <span data-translate="servicePortfolio" class="text-sm font-semibold text-blue-700">Complete Service Portfolio</span>
      </div>
      <h2 class="text-4xl md:text-6xl lg:text-7xl font-bold text-gray-900 mb-8 leading-tight">
        <span data-translate="ourServices" class="bg-gradient-to-r from-gray-900 via-blue-800 to-purple-800 bg-clip-text text-transparent">Our Services</span>
      </h2>
      <p data-translate="servicesDescription" class="text-xl lg:text-2xl text-gray-600 max-w-4xl mx-auto leading-relaxed font-light">
        Choose from our comprehensive range of professional services designed to meet your every need with enterprise-grade reliability.
      </p>
    </div>
    
    <div class="grid md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4 gap-8 lg:gap-10 items-stretch">
      {services.map((service, index) => {
        const colors = getColorClasses(service.color);
        return (
          <div class={`group bg-white rounded-3xl border border-gray-100 ${colors.border} p-8 lg:p-10 hover:shadow-2xl hover:shadow-gray-900/5 transition-all duration-500 transform hover:-translate-y-3 relative overflow-hidden animate-card-up animation-delay-${index * 200} flex flex-col h-full`}>
            
            <!-- Subtle Gradient Overlay -->
            <div class={`absolute inset-0 bg-gradient-to-br ${colors.gradient} opacity-0 group-hover:opacity-3 transition-opacity duration-700 rounded-3xl`}></div>
            <!-- Corner Accent -->
            <div class={`absolute top-0 right-0 w-20 h-20 bg-gradient-to-bl ${colors.gradient} opacity-5 rounded-tl-none rounded-tr-3xl rounded-bl-full rounded-br-none`}></div>
            
            <div class="relative z-10 flex flex-col h-full">
              <div class="text-center mb-10">
                <div class={`w-24 h-24 ${colors.icon} rounded-3xl flex items-center justify-center mx-auto mb-8 group-hover:scale-110 group-hover:-rotate-6 transition-all duration-500 shadow-xl shadow-gray-900/10 animate-icon-float animation-delay-${index * 500}`}>
                  <Fragment set:html={getIcon(service.icon)} />
                </div>
                <h3 data-translate={`${service.id}Title`} class="text-2xl lg:text-3xl font-bold text-gray-900 mb-4 group-hover:text-blue-600 transition-colors leading-tight animate-slide-up animation-delay-${index * 200}">{service.title}</h3>
                <p data-translate={`${service.id}Desc`} class="text-gray-600 leading-relaxed text-base lg:text-lg animate-fade-in animation-delay-${index * 300}">{service.description}</p>
              </div>
              
              <div class="space-y-4 mb-10 flex-grow">
                {service.features.map((feature, featureIndex) => (
                  <div class="flex items-center space-x-4 p-3 rounded-2xl bg-gray-50/50 group-hover:bg-white transition-colors duration-300">
                    <div class={`w-6 h-6 bg-gradient-to-r ${colors.gradient} rounded-xl flex items-center justify-center flex-shrink-0 shadow-md`}>
                      <svg class="w-3.5 h-3.5 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                      </svg>
                    </div>
                    <span data-translate={service.features[featureIndex].replace(' ', '').toLowerCase()} class="text-sm lg:text-base text-gray-700 font-semibold">{feature}</span>
                  </div>
                ))}
              </div>
              
              <div class="mt-auto">
                <button 
                  onclick={`selectService('${service.id}')`}
                  class={`w-full bg-gradient-to-r ${colors.gradient} text-white font-bold py-4 lg:py-5 px-6 rounded-2xl hover:shadow-2xl hover:shadow-${service.color}-500/25 transition-all duration-500 transform hover:-translate-y-1 group-hover:scale-105 text-base lg:text-lg`}
                >
                  <span class="flex items-center justify-center space-x-3">
                    <span data-translate="bookNow">Book Now</span>
                    <svg class="w-5 h-5 transform group-hover:translate-x-2 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                    </svg>
                  </span>
                </button>
              </div>
            </div>
          </div>
        );
      })}
    </div>
    
    <div class="text-center mt-20">
      <div class="bg-gradient-to-br from-blue-50 via-white to-purple-50 rounded-4xl p-12 lg:p-16 shadow-2xl border border-gray-100 max-w-4xl mx-auto relative overflow-hidden">
        <!-- Decorative Elements -->
        <div class="absolute top-0 right-0 w-32 h-32 bg-gradient-to-bl from-blue-100 to-transparent rounded-bl-full opacity-50"></div>
        <div class="absolute bottom-0 left-0 w-40 h-40 bg-gradient-to-tr from-purple-100 to-transparent rounded-tr-full opacity-50"></div>
        
        <div class="relative z-10">
          <div class="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-2xl flex items-center justify-center mx-auto mb-8 shadow-xl">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <h3 data-translate="notSureService" class="text-3xl lg:text-4xl font-bold text-gray-900 mb-6 leading-tight">Not sure which service fits your needs?</h3>
          <p data-translate="expertConsultants" class="text-xl text-gray-600 mb-10 leading-relaxed font-light max-w-2xl mx-auto">
            Our expert consultants are here to help you find the perfect solution for your requirements.
          </p>
          <button 
            onclick="openBookingModal()"
            class="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-10 lg:px-12 py-5 lg:py-6 rounded-2xl hover:shadow-2xl hover:shadow-blue-500/25 transform hover:-translate-y-1 transition-all duration-500 font-bold text-lg lg:text-xl group"
          >
            <span class="flex items-center justify-center space-x-3">
              <span data-translate="getFreeConsultation">Get Free Consultation</span>
              <svg class="w-6 h-6 transform group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Enhanced animations for services */
  @keyframes icon-float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    25% { transform: translateY(-8px) rotate(2deg); }
    50% { transform: translateY(-4px) rotate(-1deg); }
    75% { transform: translateY(-10px) rotate(1deg); }
  }
  
  @keyframes card-up {
    from {
      opacity: 0;
      transform: translateY(60px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }
  
  .animate-icon-float {
    animation: icon-float 4s infinite ease-in-out;
  }
  
  .animate-card-up {
    animation: card-up 0.8s ease-out both;
  }
  
  .animate-slide-up {
    animation: slide-up 0.6s ease-out both;
  }
  
  .animate-fade-in {
    animation: fade-in 0.8s ease-out both;
  }
  
  /* Staggered animation delays */
  .animation-delay-0 { animation-delay: 0ms; }
  .animation-delay-200 { animation-delay: 200ms; }
  .animation-delay-400 { animation-delay: 400ms; }
  .animation-delay-500 { animation-delay: 500ms; }
  .animation-delay-600 { animation-delay: 600ms; }
  .animation-delay-800 { animation-delay: 800ms; }
  .animation-delay-1000 { animation-delay: 1000ms; }
  .animation-delay-1200 { animation-delay: 1200ms; }
  .animation-delay-1500 { animation-delay: 1500ms; }
  .animation-delay-2000 { animation-delay: 2000ms; }
  
  /* Hover effects with shimmer */
  .group:hover::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    animation: shimmer 1.5s ease-in-out;
    pointer-events: none;
  }
  
  /* Performance optimizations */
  .animate-icon-float,
  .animate-card-up {
    will-change: transform, opacity;
  }
  
  /* Mobile performance optimization */
  @media (max-width: 768px) {
    .animate-icon-float {
      animation-duration: 6s;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .animate-icon-float,
    .animate-card-up,
    .animate-slide-up,
    .animate-fade-in {
      animation: none;
    }
  }
</style>