---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import Services from '../components/Services.astro';
import Features from '../components/Features.astro';
import Newsletter from '../components/Newsletter.astro';
import FAQ from '../components/FAQ.astro';
import Blog from '../components/Blog.astro';
import Security from '../components/Security.astro';
import CTA from '../components/CTA.astro';
import BookingModal from '../components/BookingModal.astro';
import Footer from '../components/Footer.astro';
---

<Layout 
  title="BookingWhale - Advanced Booking Platform | Automated Booking, Secure Payments & Analytics | Free Beta"
  description="Transform your business with BookingWhale's automated booking platform. Features secure payments, real-time analytics, and 24/7 support. Join 1000+ early users - Free during beta. Perfect for service businesses, personal trainers, and enterprises."
  keywords="booking platform, automated booking system, online booking software, service booking app, appointment scheduling, business management platform, secure payment booking, booking analytics, enterprise booking solution, personal trainer booking, service scheduling software"
>
  <Header />
  <Hero />
  <Services />
  <Features />
  <FAQ />
  <Blog />
  <CTA />
  <Security />
  <Footer />
  <BookingModal />
  
  <script>
    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          const headerHeight = 80; // Account for fixed header
          const targetPosition = target.offsetTop - headerHeight;
          
          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          });
        }
      });
    });

    // Header background on scroll - handled in Header.astro

    // Intersection Observer for animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
        }
      });
    }, observerOptions);

    // Observe all sections
    document.querySelectorAll('section').forEach(section => {
      observer.observe(section);
    });
  </script>

  <style>
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .animate-fade-in {
      animation: fadeIn 0.6s ease-out forwards;
    }

    /* Smooth scroll behavior */
    html {
      scroll-behavior: smooth;
    }

    /* Custom scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: #f1f5f9;
    }

    ::-webkit-scrollbar-thumb {
      background: #cbd5e1;
      border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: #94a3b8;
    }
  </style>
</Layout>
